[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/asyncFlow.js",
    "content": "import { Maybe } from \"./maybe\";\r\nimport { ErrorM } from \"./error\";\r\nimport { clone } from \"./services/clone\";\r\nimport { Monad } from \"./monad\";\r\n/**\r\n * Class AsyncFlow - for composing monads in an async flow (pipe), based on Promise.\r\n * @extends {Monad}\r\n */\r\nexport class AsyncFlow extends Monad {\r\n    /**\r\n     * Creates an instance of class AsyncFlow.\r\n     * @param {any} [initV = 0] initV - initial value of new flow (pipe).\r\n     * @param {boolean} [encapsulate = true] encapsulate - flag, if true then the init value will be cloned.\r\n     */\r\n    constructor(initV = 0, encapsulate = true) {\r\n        super();\r\n        /**\r\n         * Keep initial flow (pipe) value.\r\n         * @type {any}\r\n         */\r\n        this.flow = encapsulate ? clone(initV) : initV;\r\n        /**\r\n         * The instance of Maybe.\r\n         * @type {Maybe}\r\n         */\r\n        this.maybe = new Maybe();\r\n        /**\r\n         * The instance of ErrorM.\r\n         * @type {ErrorM}\r\n         */\r\n        this.err = new ErrorM();\r\n    }\r\n    /**\r\n     * Binds initial value to the transformation function.\r\n     * @method bind\r\n     * @param {function(v: T) => Pr<U>} f - transformation function.\r\n     * @return {Promise<T>}\r\n     */\r\n    bind(f) {\r\n        return new Promise((resolve) => {\r\n            resolve(this.err.bind(v => this.maybe.bind((v) => f(v), v), this.flow));\r\n        });\r\n    }\r\n}\r\n//Copyright (c) 2017 Alex Tranchenko. All rights reserved. \r\n",
    "static": true,
    "longname": "src/asyncFlow.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "class",
    "name": "AsyncFlow",
    "memberof": "src/asyncFlow.js",
    "static": true,
    "longname": "src/asyncFlow.js~AsyncFlow",
    "access": null,
    "export": true,
    "importPath": "monad-ts/src/asyncFlow.js",
    "importStyle": "{AsyncFlow}",
    "description": "Class AsyncFlow - for composing monads in an async flow (pipe), based on Promise.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "Monad"
    ]
  },
  {
    "__docId__": 2,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/asyncFlow.js~AsyncFlow",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/asyncFlow.js~AsyncFlow#constructor",
    "access": null,
    "description": "Creates an instance of class AsyncFlow.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 0",
        "defaultRaw": 0,
        "name": "initV",
        "description": "initV - initial value of new flow (pipe)."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " true",
        "defaultRaw": true,
        "name": "encapsulate",
        "description": "encapsulate - flag, if true then the init value will be cloned."
      }
    ]
  },
  {
    "__docId__": 3,
    "kind": "member",
    "name": "flow",
    "memberof": "src/asyncFlow.js~AsyncFlow",
    "static": false,
    "longname": "src/asyncFlow.js~AsyncFlow#flow",
    "access": null,
    "description": "Keep initial flow (pipe) value.",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4,
    "kind": "member",
    "name": "maybe",
    "memberof": "src/asyncFlow.js~AsyncFlow",
    "static": false,
    "longname": "src/asyncFlow.js~AsyncFlow#maybe",
    "access": null,
    "description": "The instance of Maybe.",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "Maybe"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 5,
    "kind": "member",
    "name": "err",
    "memberof": "src/asyncFlow.js~AsyncFlow",
    "static": false,
    "longname": "src/asyncFlow.js~AsyncFlow#err",
    "access": null,
    "description": "The instance of ErrorM.",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "ErrorM"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 6,
    "kind": "method",
    "name": "bind",
    "memberof": "src/asyncFlow.js~AsyncFlow",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/asyncFlow.js~AsyncFlow#bind",
    "access": null,
    "description": "Binds initial value to the transformation function.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "bind"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function(v: T) => Pr<U>"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "transformation function."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<T>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 7,
    "kind": "file",
    "name": "src/either.js",
    "content": "import { Monad } from \"./monad\";\r\nimport { equality } from \"./services/equality\";\r\n/**\r\n * Class Either - represents computation with two possibilities.\r\n * @extends {Monad}\r\n */\r\nexport class Either extends Monad {\r\n    /**\r\n     * Creates an instance of class Either.\r\n     * @param {function(v: any) => any} r - right function.\r\n     * @param {function(v: any) => any} l - left function.\r\n     */\r\n    constructor(r, l) {\r\n        super();\r\n        this.r = r;\r\n        this.l = l;\r\n    }\r\n    /**\r\n     * Binds controller function and underlying value to the monad.\r\n     * @method bind\r\n     * @param {D<T>} f - controller function, after execution f(v) produce true (execute right func-n) or false (execute left func-n).\r\n     * @param {any} v - underlying value for the monad.\r\n     * @return {boolean | Pr<any> | Error}\r\n     */\r\n    bind(f, v) {\r\n        this.uVal = v;\r\n        try {\r\n            switch (f(v)) {\r\n                case true:\r\n                    return this.r(v);\r\n                case false:\r\n                    return this.l(v);\r\n                default:\r\n                    return this.errorHandler('Either.bind() - binding error');\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.errorHandler(`Either.bind().switch - ${e}`);\r\n        }\r\n    }\r\n    /**\r\n     * Extract result of left(v) computation.\r\n     * @method left\r\n     * @param {T} v - underlying value.\r\n     * @return {Pr}\r\n     */\r\n    left(v) {\r\n        return this.uVal ? equality(this.uVal, v) ? this.l(v) : this.errorHandler('Either.left() - v have been binded with bind method') : this.l(v);\r\n    }\r\n    /**\r\n     * Extract result of right(v) computation.\r\n     * @method right\r\n     * @param {T} v - underlying value.\r\n     * @return {Pr}\r\n     */\r\n    right(v) {\r\n        return this.uVal ? equality(this.uVal, v) ? this.r(v) : this.errorHandler('Either.right() - v have been binded with bind method') : this.r(v);\r\n    }\r\n}\r\n//Copyright (c) 2017 Alex Tranchenko. All rights reserved. \r\n",
    "static": true,
    "longname": "src/either.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 8,
    "kind": "class",
    "name": "Either",
    "memberof": "src/either.js",
    "static": true,
    "longname": "src/either.js~Either",
    "access": null,
    "export": true,
    "importPath": "monad-ts/src/either.js",
    "importStyle": "{Either}",
    "description": "Class Either - represents computation with two possibilities.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "Monad"
    ]
  },
  {
    "__docId__": 9,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/either.js~Either",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/either.js~Either#constructor",
    "access": null,
    "description": "Creates an instance of class Either.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(v: any) => any"
        ],
        "spread": false,
        "optional": false,
        "name": "r",
        "description": "right function."
      },
      {
        "nullable": null,
        "types": [
          "function(v: any) => any"
        ],
        "spread": false,
        "optional": false,
        "name": "l",
        "description": "left function."
      }
    ]
  },
  {
    "__docId__": 10,
    "kind": "member",
    "name": "r",
    "memberof": "src/either.js~Either",
    "static": false,
    "longname": "src/either.js~Either#r",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 11,
    "kind": "member",
    "name": "l",
    "memberof": "src/either.js~Either",
    "static": false,
    "longname": "src/either.js~Either#l",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12,
    "kind": "method",
    "name": "bind",
    "memberof": "src/either.js~Either",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/either.js~Either#bind",
    "access": null,
    "description": "Binds controller function and underlying value to the monad.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "bind"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "D<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "controller function, after execution f(v) produce true (execute right func-n) or false (execute left func-n)."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "underlying value for the monad."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean ",
        " Pr<any> ",
        " Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 13,
    "kind": "member",
    "name": "uVal",
    "memberof": "src/either.js~Either",
    "static": false,
    "longname": "src/either.js~Either#uVal",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 14,
    "kind": "method",
    "name": "left",
    "memberof": "src/either.js~Either",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/either.js~Either#left",
    "access": null,
    "description": "Extract result of left(v) computation.",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "left"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "underlying value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Pr"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 15,
    "kind": "method",
    "name": "right",
    "memberof": "src/either.js~Either",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/either.js~Either#right",
    "access": null,
    "description": "Extract result of right(v) computation.",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "right"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "underlying value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Pr"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 16,
    "kind": "file",
    "name": "src/error.js",
    "content": "import { Monad } from \"./monad\";\r\n/**\r\n * Class ErrorM - return given value or produce Error if take Error or get Error after execution of f(v).\r\n * @extends {Monad}\r\n */\r\nexport class ErrorM extends Monad {\r\n    /**\r\n     * Chains the operations on a monadic values.\r\n     * @method bind\r\n     * @param {function(v: T) => Pr<U>} f - transformation function for a monad.\r\n     * @param {any} v - underlying value for a monad.\r\n     * @return {Pr<U>  | Error} transformed by f() value v or Error.\r\n     */\r\n    bind(f, v) {\r\n        if (v !== v || v === Infinity || v === -Infinity || v instanceof Error) {\r\n            return this.errorHandler(v);\r\n        }\r\n        else {\r\n            const vL = this.just(f, v);\r\n            return (vL !== vL || vL === Infinity || vL === -Infinity || vL instanceof Error) ? this.errorHandler(vL) : vL;\r\n        }\r\n    }\r\n}\r\n//Copyright (c) 2017 Alex Tranchenko. All rights reserved. \r\n",
    "static": true,
    "longname": "src/error.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 17,
    "kind": "class",
    "name": "ErrorM",
    "memberof": "src/error.js",
    "static": true,
    "longname": "src/error.js~ErrorM",
    "access": null,
    "export": true,
    "importPath": "monad-ts/src/error.js",
    "importStyle": "{ErrorM}",
    "description": "Class ErrorM - return given value or produce Error if take Error or get Error after execution of f(v).",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "Monad"
    ]
  },
  {
    "__docId__": 18,
    "kind": "method",
    "name": "bind",
    "memberof": "src/error.js~ErrorM",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/error.js~ErrorM#bind",
    "access": null,
    "description": "Chains the operations on a monadic values.",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "bind"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function(v: T) => Pr<U>"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "transformation function for a monad."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "underlying value for a monad."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Pr<U>  ",
        " Error"
      ],
      "spread": false,
      "description": "transformed by f() value v or Error."
    }
  },
  {
    "__docId__": 19,
    "kind": "file",
    "name": "src/flow.js",
    "content": "import { Monad } from \"./monad\";\r\nimport { Maybe } from \"./maybe\";\r\nimport { clone } from \"./services/clone\";\r\nimport { ErrorM } from \"./error\";\r\n/**\r\n * Class Flow - for composing monads in a flow (pipe).\r\n * @extends {Monad}\r\n */\r\nexport class Flow extends Monad {\r\n    /**\r\n     * Create an instance of class AsyncFlow.\r\n     * @param {any} initV - initial value of new flow (pipe).\r\n     * @param {boolean} [encapsulate = true] encapsulate - flag, if true then the init value will be cloned.\r\n     */\r\n    constructor(initV, encapsulate = true) {\r\n        super();\r\n        /**\r\n         * keep initial flow (pipe) value.\r\n         * @type {any}\r\n         */\r\n        this.flow = encapsulate ? clone(initV) : initV;\r\n        /**\r\n         * the instance of Maybe.\r\n         * @type {Maybe}\r\n         */\r\n        this.maybe = new Maybe();\r\n        /**\r\n         * the instance of ErrorM.\r\n         * @type {ErrorM}\r\n         */\r\n        this.err = new ErrorM();\r\n    }\r\n    /**\r\n     * Chains the operations on a monadic values.\r\n     * @method bind\r\n     * @param {function(v: T) => Pr<U>} f - transformation function for a main flow value.\r\n     * @param {any} [v = this.flow] - underlying value for a monad.\r\n     * @return {Flow<T>} transformed by f() value v or throw Error or null.\r\n     */\r\n    bind(f, v = this.flow) {\r\n        this.flow = this.err.bind(v => this.maybe.bind((v) => f(v), v), v);\r\n        return this;\r\n    }\r\n    /**\r\n     * Creates branch from a flow (pipe).\r\n     * @method let\r\n     * @param {function(v: T) => Pr<U>} f - transformation function for a main flow value.\r\n     * @return {Flow<T>}\r\n     */\r\n    let(f) {\r\n        f(clone(this.flow));\r\n        return this;\r\n    }\r\n    /**\r\n     * Extract value from a flow (pipe).\r\n     * @method subscribe\r\n     * @return {T}\r\n     */\r\n    subscribe() {\r\n        return this.flow;\r\n    }\r\n}\r\n//Copyright (c) 2017 Alex Tranchenko. All rights reserved.\r\n",
    "static": true,
    "longname": "src/flow.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 20,
    "kind": "class",
    "name": "Flow",
    "memberof": "src/flow.js",
    "static": true,
    "longname": "src/flow.js~Flow",
    "access": null,
    "export": true,
    "importPath": "monad-ts/src/flow.js",
    "importStyle": "{Flow}",
    "description": "Class Flow - for composing monads in a flow (pipe).",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "Monad"
    ]
  },
  {
    "__docId__": 21,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/flow.js~Flow",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/flow.js~Flow#constructor",
    "access": null,
    "description": "Create an instance of class AsyncFlow.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "initV",
        "description": "initial value of new flow (pipe)."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " true",
        "defaultRaw": true,
        "name": "encapsulate",
        "description": "encapsulate - flag, if true then the init value will be cloned."
      }
    ]
  },
  {
    "__docId__": 22,
    "kind": "member",
    "name": "flow",
    "memberof": "src/flow.js~Flow",
    "static": false,
    "longname": "src/flow.js~Flow#flow",
    "access": null,
    "description": "keep initial flow (pipe) value.",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 23,
    "kind": "member",
    "name": "maybe",
    "memberof": "src/flow.js~Flow",
    "static": false,
    "longname": "src/flow.js~Flow#maybe",
    "access": null,
    "description": "the instance of Maybe.",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "Maybe"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 24,
    "kind": "member",
    "name": "err",
    "memberof": "src/flow.js~Flow",
    "static": false,
    "longname": "src/flow.js~Flow#err",
    "access": null,
    "description": "the instance of ErrorM.",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "ErrorM"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 25,
    "kind": "method",
    "name": "bind",
    "memberof": "src/flow.js~Flow",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/flow.js~Flow#bind",
    "access": null,
    "description": "Chains the operations on a monadic values.",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "bind"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function(v: T) => Pr<U>"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "transformation function for a main flow value."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " this.flow",
        "defaultRaw": " this.flow",
        "name": "v",
        "description": "underlying value for a monad."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Flow<T>"
      ],
      "spread": false,
      "description": "transformed by f() value v or throw Error or null."
    }
  },
  {
    "__docId__": 26,
    "kind": "member",
    "name": "flow",
    "memberof": "src/flow.js~Flow",
    "static": false,
    "longname": "src/flow.js~Flow#flow",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 27,
    "kind": "method",
    "name": "let",
    "memberof": "src/flow.js~Flow",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/flow.js~Flow#let",
    "access": null,
    "description": "Creates branch from a flow (pipe).",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "let"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function(v: T) => Pr<U>"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "transformation function for a main flow value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Flow<T>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 28,
    "kind": "method",
    "name": "subscribe",
    "memberof": "src/flow.js~Flow",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/flow.js~Flow#subscribe",
    "access": null,
    "description": "Extract value from a flow (pipe).",
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "subscribe"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "T"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 29,
    "kind": "file",
    "name": "src/identity.js",
    "content": "import { Monad } from \"./monad\";\r\nimport { clone } from \"./services/clone\";\r\nimport { equality } from \"./services/equality\";\r\nimport { ErrorM } from \"./error\";\r\n/**\r\n * Class Identity - wraps underlying value into the monadic value and compute results from a monadic value.\r\n * @extends {Monad}\r\n */\r\nexport class Identity extends Monad {\r\n    /**\r\n     * Creates an instance of class Identity.\r\n     * @param {any} [v] - The initial state of app.\r\n     * */\r\n    constructor(v) {\r\n        super();\r\n        /**\r\n         * Keeps underlying value of a monad.\r\n         * @type {any}\r\n         */\r\n        this.v = clone(v);\r\n        /**\r\n         * The instance of ErrorM.\r\n         * @type {ErrorM}\r\n         */\r\n        this.err = new ErrorM();\r\n    }\r\n    /**\r\n     * Chains the operations on a monadic value.\r\n     * @method bind\r\n     * @param {MF<T, U>} f - transformation function for the monad.\r\n     * @param {any} [v = this.v]- underlying value for the monad, it can be null.\r\n     * @return {Pr<U> | Error}\r\n     */\r\n    bind(f, v = this.v) {\r\n        return this.v && v\r\n            ? equality(this.v, v)\r\n                ? f(v)\r\n                : this.errorHandler('Identity.bind() - underlying value of the monad have defined in the constructor!')\r\n            : v || v === 0 || v === '' || v === null\r\n                ? f(v)\r\n                : f();\r\n    }\r\n}\r\n//Copyright (c) 2017 Alex Tranchenko. All rights reserved.\r\n",
    "static": true,
    "longname": "src/identity.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 30,
    "kind": "class",
    "name": "Identity",
    "memberof": "src/identity.js",
    "static": true,
    "longname": "src/identity.js~Identity",
    "access": null,
    "export": true,
    "importPath": "monad-ts/src/identity.js",
    "importStyle": "{Identity}",
    "description": "Class Identity - wraps underlying value into the monadic value and compute results from a monadic value.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "Monad"
    ]
  },
  {
    "__docId__": 31,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/identity.js~Identity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/identity.js~Identity#constructor",
    "access": null,
    "description": "Creates an instance of class Identity.",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": true,
        "name": "v",
        "description": "The initial state of app."
      }
    ]
  },
  {
    "__docId__": 32,
    "kind": "member",
    "name": "v",
    "memberof": "src/identity.js~Identity",
    "static": false,
    "longname": "src/identity.js~Identity#v",
    "access": null,
    "description": "Keeps underlying value of a monad.",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 33,
    "kind": "member",
    "name": "err",
    "memberof": "src/identity.js~Identity",
    "static": false,
    "longname": "src/identity.js~Identity#err",
    "access": null,
    "description": "The instance of ErrorM.",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "ErrorM"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 34,
    "kind": "method",
    "name": "bind",
    "memberof": "src/identity.js~Identity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/identity.js~Identity#bind",
    "access": null,
    "description": "Chains the operations on a monadic value.",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "bind"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "MF<T, U>"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "transformation function for the monad."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " this.v",
        "defaultRaw": " this.v",
        "name": "v",
        "description": "underlying value for the monad, it can be null."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Pr<U> ",
        " Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 35,
    "kind": "file",
    "name": "src/interfaces/m.js",
    "content": "/**\r\n * interface M<T>{\r\n *\r\n *  just<T,U>(f: MF<T, U>, v: T): Pr<U>;\r\n *\r\n *  errorHandler(e: Error | string): Error;\r\n *\r\n * }\r\n * @interface\r\n * @name M - monads interface, {@link Monad}.\r\n * @noimport true\r\n */\r\nexport class M {\r\n    /**\r\n     * extracts value from monad.\r\n     * @param {function(v: T) => Pr<U>} f - transformation function for a monad.\r\n     * @param {T} v - underlying value.\r\n     * @return {Pr<U>} extracts transformed value by f(v).\r\n     */\r\n    just(f, v) {\r\n        return void 0;\r\n    }\r\n    ;\r\n    /**\r\n     * errors handler.\r\n     * @param {Error | string} e - Error obj. or string.\r\n     * @return {Error}\r\n     */\r\n    errorHandler(e) {\r\n        return void 0;\r\n    }\r\n    ;\r\n}\r\n//Copyright (c) 2017 Alex Tranchenko. All rights reserved. \r\n",
    "static": true,
    "longname": "src/interfaces/m.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 36,
    "kind": "class",
    "name": "M",
    "memberof": "src/interfaces/m.js",
    "static": true,
    "longname": "src/interfaces/m.js~M",
    "access": null,
    "export": true,
    "importPath": "monad-ts/src/interfaces/m.js",
    "importStyle": "{M}",
    "description": "interface M<T>{\n\n just<T,U>(f: MF<T, U>, v: T): Pr<U>;\n\n errorHandler(e: Error | string): Error;\n\n}",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@noimport",
        "tagValue": "true"
      }
    ],
    "interface": true
  },
  {
    "__docId__": 37,
    "kind": "method",
    "name": "just",
    "memberof": "src/interfaces/m.js~M",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/interfaces/m.js~M#just",
    "access": null,
    "description": "extracts value from monad.",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(v: T) => Pr<U>"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "transformation function for a monad."
      },
      {
        "nullable": null,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "underlying value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Pr<U>"
      ],
      "spread": false,
      "description": "extracts transformed value by f(v)."
    }
  },
  {
    "__docId__": 38,
    "kind": "method",
    "name": "errorHandler",
    "memberof": "src/interfaces/m.js~M",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/interfaces/m.js~M#errorHandler",
    "access": null,
    "description": "errors handler.",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "Error ",
          " string"
        ],
        "spread": false,
        "optional": false,
        "name": "e",
        "description": "Error obj. or string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 39,
    "kind": "file",
    "name": "src/list.js",
    "content": "import { Monad } from \"./monad\";\r\n/**\r\n * Class List - transform every element of array with given function \"contemporaneously\".\r\n * @extends {Monad}\r\n */\r\nexport class List extends Monad {\r\n    /**\r\n     * Transform every element of array with given function\r\n     * @method bind\r\n     * @param {MF<T, U>} f - transformation function for a monad.\r\n     * @param v - underlying value for a monad.\r\n     * @return {Pr<U> | Error} transformed by f() value v or error if input arg is not array.\r\n     */\r\n    bind(f, v) {\r\n        return Array.isArray(v) ? this._disp(f, v) : this.errorHandler('List.bind() - input must be an array.');\r\n    }\r\n    /**\r\n     * @method _disp\r\n     * @param {function(n: T) => U} f - transformation function for a monad.\r\n     * @param {any} v - underlying value for a monad.\r\n     * @return {Array<U>} transformed by f() value v.\r\n     * @private\r\n     */\r\n    _disp(f, v) {\r\n        return v.map((vL) => {\r\n            return !Array.isArray(vL) ? f(vL) : this._disp(f, vL);\r\n        });\r\n    }\r\n}\r\n//Copyright (c) 2017 Alex Tranchenko. All rights reserved.\r\n",
    "static": true,
    "longname": "src/list.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 40,
    "kind": "class",
    "name": "List",
    "memberof": "src/list.js",
    "static": true,
    "longname": "src/list.js~List",
    "access": null,
    "export": true,
    "importPath": "monad-ts/src/list.js",
    "importStyle": "{List}",
    "description": "Class List - transform every element of array with given function \"contemporaneously\".",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "Monad"
    ]
  },
  {
    "__docId__": 41,
    "kind": "method",
    "name": "bind",
    "memberof": "src/list.js~List",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/list.js~List#bind",
    "access": null,
    "description": "Transform every element of array with given function",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "bind"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "MF<T, U>"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "transformation function for a monad."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "underlying value for a monad."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Pr<U> ",
        " Error"
      ],
      "spread": false,
      "description": "transformed by f() value v or error if input arg is not array."
    }
  },
  {
    "__docId__": 42,
    "kind": "method",
    "name": "_disp",
    "memberof": "src/list.js~List",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/list.js~List#_disp",
    "access": "private",
    "description": "",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "_disp"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function(n: T) => U"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "transformation function for a monad."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "underlying value for a monad."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<U>"
      ],
      "spread": false,
      "description": "transformed by f() value v."
    }
  },
  {
    "__docId__": 43,
    "kind": "file",
    "name": "src/maybe.js",
    "content": "import { Monad } from \"./monad\";\r\n/**\r\n * Class Maybe - return given value or produce null if take nothing or get nothing after execution of f(v).\r\n * @extends {Monad}\r\n */\r\nexport class Maybe extends Monad {\r\n    /**\r\n     * Chains the operations on a monadic values.\r\n     * @method bind\r\n     * @param {MF<T, U>} f - transformation function for a monad.\r\n     * @param {T} v - underlying value for a monad.\r\n     * @return {Pr<U>} transformed by f() value v.\r\n     */\r\n    bind(f, v) {\r\n        if (v === null || v === undefined) {\r\n            return this.nothing();\r\n        }\r\n        else {\r\n            const vL = this.just(f, v);\r\n            return (vL === null || vL === undefined) ? this.nothing() : vL;\r\n        }\r\n    }\r\n    /**\r\n     * Return nothing (null).\r\n     * @method nothing\r\n     * @return {null}\r\n     */\r\n    nothing() {\r\n        return null;\r\n    }\r\n    ;\r\n}\r\n//Copyright (c) 2017 Alex Tranchenko. All rights reserved.\r\n",
    "static": true,
    "longname": "src/maybe.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 44,
    "kind": "class",
    "name": "Maybe",
    "memberof": "src/maybe.js",
    "static": true,
    "longname": "src/maybe.js~Maybe",
    "access": null,
    "export": true,
    "importPath": "monad-ts/src/maybe.js",
    "importStyle": "{Maybe}",
    "description": "Class Maybe - return given value or produce null if take nothing or get nothing after execution of f(v).",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "Monad"
    ]
  },
  {
    "__docId__": 45,
    "kind": "method",
    "name": "bind",
    "memberof": "src/maybe.js~Maybe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/maybe.js~Maybe#bind",
    "access": null,
    "description": "Chains the operations on a monadic values.",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "bind"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "MF<T, U>"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "transformation function for a monad."
      },
      {
        "nullable": null,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "underlying value for a monad."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Pr<U>"
      ],
      "spread": false,
      "description": "transformed by f() value v."
    }
  },
  {
    "__docId__": 46,
    "kind": "method",
    "name": "nothing",
    "memberof": "src/maybe.js~Maybe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/maybe.js~Maybe#nothing",
    "access": null,
    "description": "Return nothing (null).",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "nothing"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 47,
    "kind": "file",
    "name": "src/monad.js",
    "content": "/**\r\n * Class Monad - Base abstract class.\r\n * @implements {M}\r\n * @abstract\r\n */\r\nexport class Monad {\r\n    /**\r\n     * Binds transformation function and underlying value to the monad.\r\n     * @method bind\r\n     * @param {MF<T, U> | D<T>} f - transformation function.\r\n     * @param v - underlying value.\r\n     * @return {Promise<U> | Pr<U> | Error | boolean  | void}\r\n     * @abstract\r\n     */\r\n    bind(f, v) {\r\n        return void 0;\r\n    }\r\n    ;\r\n    /**\r\n     * Takes Error or string return Error.\r\n     * @method errorHandler\r\n     * @param {Error | string} e - Error obj. or string.\r\n     * @return {Error}\r\n     * @protected\r\n     */\r\n    errorHandler(e) {\r\n        return e instanceof Error ? e : new Error(e);\r\n    }\r\n    /**\r\n     * Produces result after execution f(v).\r\n     * @method just\r\n     * @param {function(v: T) => Pr<U>} f - transformation function for a monad.\r\n     * @param {T} v - underlying value.\r\n     * @return {Pr<U>} extracts transformed value by f(v).\r\n     * @protected\r\n     */\r\n    just(f, v) {\r\n        return f(v);\r\n    }\r\n}\r\n//Copyright (c) 2017 Alex Tranchenko. All rights reserved.\r\n",
    "static": true,
    "longname": "src/monad.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 48,
    "kind": "class",
    "name": "Monad",
    "memberof": "src/monad.js",
    "static": true,
    "longname": "src/monad.js~Monad",
    "access": null,
    "export": true,
    "importPath": "monad-ts/src/monad.js",
    "importStyle": "{Monad}",
    "description": "Class Monad - Base abstract class.",
    "lineNumber": 6,
    "abstract": true,
    "interface": false,
    "implements": [
      "M"
    ]
  },
  {
    "__docId__": 49,
    "kind": "method",
    "name": "bind",
    "memberof": "src/monad.js~Monad",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/monad.js~Monad#bind",
    "access": null,
    "description": "Binds transformation function and underlying value to the monad.",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "bind"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "MF<T, U> | D<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "transformation function."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "underlying value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<U> | Pr<U> | Error | boolean  | void"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 50,
    "kind": "method",
    "name": "errorHandler",
    "memberof": "src/monad.js~Monad",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/monad.js~Monad#errorHandler",
    "access": "protected",
    "description": "Takes Error or string return Error.",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "errorHandler"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Error ",
          " string"
        ],
        "spread": false,
        "optional": false,
        "name": "e",
        "description": "Error obj. or string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 51,
    "kind": "method",
    "name": "just",
    "memberof": "src/monad.js~Monad",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/monad.js~Monad#just",
    "access": "protected",
    "description": "Produces result after execution f(v).",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "just"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function(v: T) => Pr<U>"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "transformation function for a monad."
      },
      {
        "nullable": null,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "underlying value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Pr<U>"
      ],
      "spread": false,
      "description": "extracts transformed value by f(v)."
    }
  },
  {
    "__docId__": 52,
    "kind": "file",
    "name": "src/services/cast.js",
    "content": "/**\r\n * Decreasing the dimension of an array by n.\r\n * @method cast\r\n * @param {any} arr - input array.\r\n * @param {number} n - decreasing factor.\r\n * @return {Array<any>|T[]|Error}\r\n */\r\nexport function cast(arr, n = 0) {\r\n    return typeof n === 'number' && Array.isArray(arr)\r\n        ? n > 0 ? _reduser(arr, n) : arr\r\n        : new Error('Function cast. Input  must  be array and factor - number.');\r\n}\r\n/**\r\n * @method _reduser\r\n * @param {Array<T>} arr - input array.\r\n * @param {number} n - decreasing factor.\r\n * @return {Array<any>}\r\n * @private\r\n */\r\nfunction _reduser(arr, n) {\r\n    return arr.length\r\n        ? arr.reduce((acc, vL) => {\r\n            return acc.concat(_fact(vL, n));\r\n        }, [])\r\n        : arr;\r\n}\r\n/**\r\n * @method _fact\r\n * @param {Array<any>} arr - input array.\r\n * @param {number} n - decreasing factor.\r\n * @return {Array<any>}\r\n * @private\r\n */\r\nfunction _fact(arr, n) {\r\n    return (n === 1) ? arr : _reduser(arr, n - 1);\r\n}\r\n//Copyright (c) 2017 Alex Tranchenko. All rights reserved.\r\n",
    "static": true,
    "longname": "src/services/cast.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 53,
    "kind": "function",
    "name": "cast",
    "memberof": "src/services/cast.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/services/cast.js~cast",
    "access": null,
    "export": true,
    "importPath": "monad-ts/src/services/cast.js",
    "importStyle": "{cast}",
    "description": "Decreasing the dimension of an array by n.",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "cast"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": "input array."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "decreasing factor."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<any>",
        "T[]",
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 54,
    "kind": "function",
    "name": "_reduser",
    "memberof": "src/services/cast.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/services/cast.js~_reduser",
    "access": "private",
    "export": false,
    "importPath": "monad-ts/src/services/cast.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "_reduser"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": "input array."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "decreasing factor."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<any>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 55,
    "kind": "function",
    "name": "_fact",
    "memberof": "src/services/cast.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/services/cast.js~_fact",
    "access": "private",
    "export": false,
    "importPath": "monad-ts/src/services/cast.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "_fact"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<any>"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": "input array."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "decreasing factor."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<any>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 56,
    "kind": "file",
    "name": "src/services/clone.js",
    "content": "/**\r\n * The service to clone complex objects, including Map.\r\n * @method clone\r\n * @param {T} obj - Object or Primitives to clone.\r\n * @return {T}\r\n */\r\nexport function clone(obj, map = new Map()) {\r\n    // Primitives are immutable, no need to clone them.\r\n    if (Object(obj) !== obj) {\r\n        return obj;\r\n    }\r\n    else if (map.has(obj)) {\r\n        // Cyclic reference handling\r\n        return map.get(obj);\r\n    }\r\n    else {\r\n        let result = Array.isArray(obj)\r\n            ? []\r\n            : obj.constructor && obj.constructor()\r\n                ? obj.constructor()\r\n                : Object.create(obj);\r\n        if (Object(result) !== result) {\r\n            map.set(obj, obj);\r\n            result = obj;\r\n        }\r\n        else {\r\n            map.set(obj, result);\r\n        }\r\n        if (obj instanceof Map) {\r\n            return Array.from(obj, ([key, val]) => result.set(key, _toTail(val, map)))[0];\r\n        }\r\n        else {\r\n            return Object.assign(result, ...Object.keys(obj).map(key => ({ [key]: _toTail(obj[key], map) })));\r\n        }\r\n    }\r\n}\r\n/**\r\n * @method _toTail\r\n * @param {T} obj - Object or Primitives to clone.\r\n * @param {any} map\r\n * @return {T}\r\n * @private\r\n */\r\nfunction _toTail(obj, map) {\r\n    return clone(obj, map);\r\n}\r\n//Copyright (c) 2017 Alex Tranchenko. All rights reserved.\r\n",
    "static": true,
    "longname": "src/services/clone.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 57,
    "kind": "function",
    "name": "clone",
    "memberof": "src/services/clone.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/services/clone.js~clone",
    "access": null,
    "export": true,
    "importPath": "monad-ts/src/services/clone.js",
    "importStyle": "{clone}",
    "description": "The service to clone complex objects, including Map.",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "clone"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Object or Primitives to clone."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "T"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 58,
    "kind": "function",
    "name": "_toTail",
    "memberof": "src/services/clone.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/services/clone.js~_toTail",
    "access": "private",
    "export": false,
    "importPath": "monad-ts/src/services/clone.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "_toTail"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Object or Primitives to clone."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "T"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "src/services/debounceTime.js",
    "content": "/**\r\n * Execute a function given a delay time.\r\n * @method debounceTime\r\n * @param {function} f - invoked function.\r\n * @param {number} d - a delay time.\r\n * @param {boolean} [immediate = true] immediate - first func call is immediate if true.\r\n * @return {function(...args:any[])=>void}\r\n */\r\nexport function debounceTime(f, d, immediate = true) {\r\n    let timeout;\r\n    return (...args) => {\r\n        const later = () => {\r\n            timeout = null;\r\n            if (!immediate)\r\n                f.apply(this, args);\r\n        };\r\n        const callNow = immediate && !timeout;\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(later, d);\r\n        if (callNow)\r\n            f.apply(this, args);\r\n    };\r\n}\r\n//Copyright (c) 2017 Alex Tranchenko. All rights reserved. \r\n",
    "static": true,
    "longname": "src/services/debounceTime.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "function",
    "name": "debounceTime",
    "memberof": "src/services/debounceTime.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/services/debounceTime.js~debounceTime",
    "access": null,
    "export": true,
    "importPath": "monad-ts/src/services/debounceTime.js",
    "importStyle": "{debounceTime}",
    "description": "Execute a function given a delay time.",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "debounceTime"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "invoked function."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "d",
        "description": "a delay time."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " true",
        "defaultRaw": true,
        "name": "immediate",
        "description": "immediate - first func call is immediate if true."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function(...args:any[])=>void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 61,
    "kind": "file",
    "name": "src/services/equality.js",
    "content": "/**\r\n * It checks equality of given arguments, arguments must be statically analyzable, therefore there are some constraints,\r\n * look at examples to find them.\r\n *\r\n *  @example <caption>1)</caption>\r\n *  Functions compare by the structure, not by values of variables or other elements it consists of.\r\n *\r\n *  Equal:\r\n *      let d = 20;\r\n *      equality(\r\n *          ()=>{return ()=> {return {'g': d}};},\r\n *          function(){return function() {return{'g': d}};}\r\n *      )\r\n *\r\n *  Not Equal:\r\n *      let d = 20;\r\n *      let d2 = 20;\r\n *      equality(\r\n *          ()=>{return ()=> {return {'g': d}};},\r\n *          function(){return function() {return{'g': d2}};}\r\n *      )\r\n *\r\n *  @example <caption>2)</caption>\r\n *  Do not use the creation of some objects by object creation, they will be compared wrong.\r\n *  Never use this constructions in compared objects:\r\n *      new Boolean(*);\r\n *      new Number(*);\r\n *      Error(*);\r\n *      new Error(*);\r\n *      new Date(*);\r\n *      new RegExp(*);\r\n *\r\n *  Equal:\r\n *      equality(new Boolean(true), new Boolean(false));                  // Wrong\r\n *      equality(Error('true'), Error('false'));                          // Wrong\r\n *      equality(new Number(1), new Number(11));                          // Wrong\r\n *      equality(new Date(1995, 11, 17), new Date('1995-12-17T03:24:00')) // Wrong\r\n *\r\n *  Not Equal (the exception of `new` option in some cases can solve the issue):\r\n *      equality(Boolean(true), Boolean(false)); // Right\r\n *      equality(Number(1), Number(11));         // Right\r\n *\r\n *  @example <caption>3)</caption>\r\n *  Instances of a user-defined object type that has a constructor function are compared as objects by `key: value`.\r\n *\r\n *      class Test{\r\n *          constructor(private arg: any){    }\r\n *      }\r\n *      class Test2{\r\n *          constructor(private arg: any){    }\r\n *      }\r\n *  Equal:\r\n *      new Test(true) and new Test(true);\r\n *\r\n *  Not Equal:\r\n *      new Test(true) and new Test2(true);\r\n *      new Test(true) and new Test(false);\r\n *\r\n * @method equality\r\n * @param {any} x - argument 1, can include null, NaN etc.\r\n * @param {any} y - argument 2, can include null, NaN etc.\r\n * @returns {boolean}\r\n */\r\nexport function equality(x, y) {\r\n    const isXO = new Object(x);\r\n    const isYO = new Object(y);\r\n    if (isXO !== x && isYO !== y) {\r\n        return Object.is(x, y);\r\n    }\r\n    if (isXO === x && isYO === y) {\r\n        const xN = x.constructor;\r\n        const yN = y.constructor;\r\n        if (xN === yN) {\r\n            if (xN === Array && yN === Array) {\r\n                return x.length !== y.length ? false : _arrayIterator(x, y);\r\n            }\r\n            else if (xN === Function && yN === Function) {\r\n                return x.toString() === y.toString();\r\n            }\r\n            else if (equality(Object.getOwnPropertyNames(x), Object.getOwnPropertyNames(y))) {\r\n                for (let key in x) {\r\n                    if (x.hasOwnProperty(key)) {\r\n                        if (!equality(x[key], y[key]))\r\n                            return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Tterate array controller.\r\n * @method _arrayIterator\r\n * @param {Array<any>} x\r\n * @param {Array<any>} y\r\n * @return {boolean}\r\n * @private\r\n */\r\nfunction _arrayIterator(x, y) {\r\n    return !x.some((v, i) => {\r\n        return Array.isArray(v) ? _arrayIterator(v, y[i]) : (typeof v === 'object' || typeof v === \"function\") ? !equality(v, y[i]) : !Object.is(v, y[i]);\r\n    });\r\n}\r\n//Copyright (c) 2017 Alex Tranchenko. All rights reserved. \r\n",
    "static": true,
    "longname": "src/services/equality.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 62,
    "kind": "function",
    "name": "equality",
    "memberof": "src/services/equality.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/services/equality.js~equality",
    "access": null,
    "export": true,
    "importPath": "monad-ts/src/services/equality.js",
    "importStyle": "{equality}",
    "description": "It checks equality of given arguments, arguments must be statically analyzable, therefore there are some constraints,\nlook at examples to find them.",
    "examples": [
      "<caption>1)</caption>\n Functions compare by the structure, not by values of variables or other elements it consists of.\n\n Equal:\n     let d = 20;\n     equality(\n         ()=>{return ()=> {return {'g': d}};},\n         function(){return function() {return{'g': d}};}\n     )\n\n Not Equal:\n     let d = 20;\n     let d2 = 20;\n     equality(\n         ()=>{return ()=> {return {'g': d}};},\n         function(){return function() {return{'g': d2}};}\n     )",
      "<caption>2)</caption>\n Do not use the creation of some objects by object creation, they will be compared wrong.\n Never use this constructions in compared objects:\n     new Boolean(*);\n     new Number(*);\n     Error(*);\n     new Error(*);\n     new Date(*);\n     new RegExp(*);\n\n Equal:\n     equality(new Boolean(true), new Boolean(false));                  // Wrong\n     equality(Error('true'), Error('false'));                          // Wrong\n     equality(new Number(1), new Number(11));                          // Wrong\n     equality(new Date(1995, 11, 17), new Date('1995-12-17T03:24:00')) // Wrong\n\n Not Equal (the exception of `new` option in some cases can solve the issue):\n     equality(Boolean(true), Boolean(false)); // Right\n     equality(Number(1), Number(11));         // Right",
      "<caption>3)</caption>\n Instances of a user-defined object type that has a constructor function are compared as objects by `key: value`.\n\n     class Test{\n         constructor(private arg: any){    }\n     }\n     class Test2{\n         constructor(private arg: any){    }\n     }\n Equal:\n     new Test(true) and new Test(true);\n\n Not Equal:\n     new Test(true) and new Test2(true);\n     new Test(true) and new Test(false);"
    ],
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "equality"
      },
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "argument 1, can include null, NaN etc."
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "argument 2, can include null, NaN etc."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "_arrayIterator",
    "memberof": "src/services/equality.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/services/equality.js~_arrayIterator",
    "access": "private",
    "export": false,
    "importPath": "monad-ts/src/services/equality.js",
    "importStyle": null,
    "description": "Tterate array controller.",
    "lineNumber": 106,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "_arrayIterator"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<any>"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<any>"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 64,
    "kind": "file",
    "name": "src/services/hash.js",
    "content": "/**\r\n * Calculates a hash (32 bit).\r\n * Based on FNV-1a algorithm, ref: http://isthe.com/chongo/tech/comp/fnv/\r\n * @method hash\r\n * @param {string} str - string to hash\r\n * @param {number} [pHash = 2166136261] previous hash.\r\n * @returns {number}\r\n */\r\nexport function hash(str, pHash = 2166136261) {\r\n    if (str.length === 0 || !str)\r\n        return null;\r\n    let n = str.length - 1;\r\n    let hash = pHash;\r\n    while (n >= 0) {\r\n        // xor the bottom with the current chunk.\r\n        hash ^= str.charCodeAt(n--);\r\n        //  multiply with a expression of shifts.\r\n        hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\r\n    }\r\n    return hash;\r\n}\r\n//Copyright (c) 2017 Alex Tranchenko. All rights reserved. \r\n",
    "static": true,
    "longname": "src/services/hash.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 65,
    "kind": "function",
    "name": "hash",
    "memberof": "src/services/hash.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/services/hash.js~hash",
    "access": null,
    "export": true,
    "importPath": "monad-ts/src/services/hash.js",
    "importStyle": "{hash}",
    "description": "Calculates a hash (32 bit).\nBased on FNV-1a algorithm, ref: http://isthe.com/chongo/tech/comp/fnv/",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "hash"
      },
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "string to hash"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 2166136261",
        "defaultRaw": 2166136261,
        "name": "pHash",
        "description": "previous hash."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 66,
    "kind": "file",
    "name": "src/services/wait.js",
    "content": "/**\r\n * Converts timeout in a Promise, resolved when specified amount of time passes.\r\n * @method wait\r\n * @param {any} v - value should be returned.\r\n * @param {number} [t = 0] t - amount of time, in millis.\r\n * @return {Promise<T> | Error}\r\n */\r\nexport function wait(v, t = 0) {\r\n    return typeof t === 'number' && t >= 0\r\n        ? new Promise(function (resolve) {\r\n            setTimeout(() => resolve(v), t);\r\n        })\r\n        : new Error('Function wait. Timeout must be number >= 0.');\r\n}\r\n//Copyright (c) 2017 Alex Tranchenko. All rights reserved. \r\n",
    "static": true,
    "longname": "src/services/wait.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 67,
    "kind": "function",
    "name": "wait",
    "memberof": "src/services/wait.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/services/wait.js~wait",
    "access": null,
    "export": true,
    "importPath": "monad-ts/src/services/wait.js",
    "importStyle": "{wait}",
    "description": "Converts timeout in a Promise, resolved when specified amount of time passes.",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "wait"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "value should be returned."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 0",
        "defaultRaw": 0,
        "name": "t",
        "description": "t - amount of time, in millis."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<T> ",
        " Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "src/state.js",
    "content": "import { Maybe } from \"./maybe\";\r\nimport { ErrorM } from \"./error\";\r\nimport { clone } from \"./services/clone\";\r\nimport { equality } from \"./services/equality\";\r\nimport { Monad } from './monad';\r\n/**\r\n * Class State - it takes a state and returns an intermediate value and some new state value.\r\n * @extends {Monad}\r\n */\r\nexport class State extends Monad {\r\n    /**\r\n     * Creates an instance of the class State with an initialization or not, the initialization can be occur late with bind method.\r\n     * @param {Object} [state] - the initial state of app.\r\n     */\r\n    constructor(state) {\r\n        super();\r\n        /**\r\n         * Keeps the state of application variables.\r\n         * @type {any}\r\n         */\r\n        this.state = clone(state);\r\n        /**\r\n         * The instance of Maybe.\r\n         * @type {Maybe}\r\n         */\r\n        this.maybe = new Maybe();\r\n        /**\r\n         * The instance of ErrorM.\r\n         * @type {ErrorM}\r\n         */\r\n        this.err = new ErrorM();\r\n    }\r\n    /**\r\n     * It takes an initial state of the monad if monad has initialized in the constructor then function assigns Error to underlying value.\r\n     * @method bind\r\n     * @param {Function} f\r\n     * @param [v] - underlying value for the monad, it can be null.\r\n     */\r\n    bind(f, v) {\r\n        const state = !!this.state || this.state === 0 || this.state === '' || this.state === null;\r\n        const vL = !!v || v === 0 || v === '' || v === null;\r\n        switch (true) {\r\n            case (state && vL):\r\n                this.state = this.errorHandler('State.bind() - underlying value of the monad have defined in the constructor!');\r\n                break;\r\n            case (!state && !vL):\r\n                this.state = this.errorHandler('State.bind() - underlying value of the monad have not defined!');\r\n                break;\r\n            case (!state && vL):\r\n                this.state = v;\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * Changes the state of application variables, if you try add new key with put() to state object it'll be assigned\r\n     * with Error instance.\r\n     * @method put\r\n     * @param {function(v: T)=> T} f - app. state transformation function.\r\n     */\r\n    put(f) {\r\n        const buffer = clone(this.state);\r\n        this.state = this.err.bind((v) => equality(Object.getOwnPropertyNames(buffer), Object.getOwnPropertyNames(v))\r\n            ? v\r\n            : this.errorHandler('State.put()._maybeErrorT() - after init we can not add / remove keys in state obj.'), this.maybe.bind((v) => f(v), this.state));\r\n    }\r\n    /**\r\n     * Extracts the state of app.\r\n     * @method get\r\n     * @return {T}\r\n     */\r\n    get() {\r\n        return this.state;\r\n    }\r\n}\r\n//Copyright (c) 2017 Alex Tranchenko. All rights reserved.\r\n",
    "static": true,
    "longname": "src/state.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "class",
    "name": "State",
    "memberof": "src/state.js",
    "static": true,
    "longname": "src/state.js~State",
    "access": null,
    "export": true,
    "importPath": "monad-ts/src/state.js",
    "importStyle": "{State}",
    "description": "Class State - it takes a state and returns an intermediate value and some new state value.",
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "Monad"
    ]
  },
  {
    "__docId__": 70,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/state.js~State",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/state.js~State#constructor",
    "access": null,
    "description": "Creates an instance of the class State with an initialization or not, the initialization can be occur late with bind method.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "state",
        "description": "the initial state of app."
      }
    ]
  },
  {
    "__docId__": 71,
    "kind": "member",
    "name": "state",
    "memberof": "src/state.js~State",
    "static": false,
    "longname": "src/state.js~State#state",
    "access": null,
    "description": "Keeps the state of application variables.",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "maybe",
    "memberof": "src/state.js~State",
    "static": false,
    "longname": "src/state.js~State#maybe",
    "access": null,
    "description": "The instance of Maybe.",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "Maybe"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 73,
    "kind": "member",
    "name": "err",
    "memberof": "src/state.js~State",
    "static": false,
    "longname": "src/state.js~State#err",
    "access": null,
    "description": "The instance of ErrorM.",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "ErrorM"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "bind",
    "memberof": "src/state.js~State",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/state.js~State#bind",
    "access": null,
    "description": "It takes an initial state of the monad if monad has initialized in the constructor then function assigns Error to underlying value.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "bind"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "v",
        "description": "underlying value for the monad, it can be null."
      }
    ]
  },
  {
    "__docId__": 75,
    "kind": "member",
    "name": "state",
    "memberof": "src/state.js~State",
    "static": false,
    "longname": "src/state.js~State#state",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "member",
    "name": "state",
    "memberof": "src/state.js~State",
    "static": false,
    "longname": "src/state.js~State#state",
    "access": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "member",
    "name": "state",
    "memberof": "src/state.js~State",
    "static": false,
    "longname": "src/state.js~State#state",
    "access": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "put",
    "memberof": "src/state.js~State",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/state.js~State#put",
    "access": null,
    "description": "Changes the state of application variables, if you try add new key with put() to state object it'll be assigned\nwith Error instance.",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "put"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function(v: T)=> T"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "app. state transformation function."
      }
    ]
  },
  {
    "__docId__": 79,
    "kind": "member",
    "name": "state",
    "memberof": "src/state.js~State",
    "static": false,
    "longname": "src/state.js~State#state",
    "access": null,
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "get",
    "memberof": "src/state.js~State",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/state.js~State#get",
    "access": null,
    "description": "Extracts the state of app.",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "get"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "T"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "src/types/d.js",
    "content": "/**\r\n * D<T> - dispatcher's type function.\r\n * @public\r\n * @typedef {function(v: T): Boolean} D<T>\r\n */\r\n//Copyright (c) 2017 Alex Tranchenko. All rights reserved. \r\n",
    "static": true,
    "longname": "src/types/d.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "typedef",
    "name": "D<T>",
    "memberof": "src/types/d.js",
    "static": true,
    "longname": "src/types/d.js~D<T>",
    "access": "public",
    "description": "D<T> - dispatcher's type function.",
    "type": {
      "types": [
        "function(v: T): Boolean"
      ],
      "optional": false,
      "name": "D<T>"
    }
  },
  {
    "__docId__": 83,
    "kind": "file",
    "name": "src/types/mf.js",
    "content": "/**\r\n * MF<T, U> - transformation function's type.\r\n * @public\r\n * @typedef {function(v: T): Pr<U>} MF<T,U>\r\n */\r\n//Copyright (c) 2017 Alex Tranchenko. All rights reserved. \r\n",
    "static": true,
    "longname": "src/types/mf.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 84,
    "kind": "typedef",
    "name": "MF<T,U>",
    "memberof": "src/types/mf.js",
    "static": true,
    "longname": "src/types/mf.js~MF<T,U>",
    "access": "public",
    "description": "MF<T, U> - transformation function's type.",
    "type": {
      "types": [
        "function(v: T): Pr<U>"
      ],
      "optional": false,
      "name": "MF<T,U>"
    }
  },
  {
    "__docId__": 85,
    "kind": "file",
    "name": "src/types/pr.js",
    "content": "/**\r\n * Pr<U> - type of returned values.\r\n * @public\r\n * @typedef {M<U> | U} Pr<U>\r\n */\r\n//Copyright (c) 2017 Alex Tranchenko. All rights reserved. \r\n",
    "static": true,
    "longname": "src/types/pr.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 86,
    "kind": "typedef",
    "name": "Pr<U>",
    "memberof": "src/types/pr.js",
    "static": true,
    "longname": "src/types/pr.js~Pr<U>",
    "access": "public",
    "description": "Pr<U> - type of returned values.",
    "type": {
      "types": [
        "M<U> ",
        " U"
      ],
      "optional": false,
      "name": "Pr<U>"
    }
  },
  {
    "__docId__": 88,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 89,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 90,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 91,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 92,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 93,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 94,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 95,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 96,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 97,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 98,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 99,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 100,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 101,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 102,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 103,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 104,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 105,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 106,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 107,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 108,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 109,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 110,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 111,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 112,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 113,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 114,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 115,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 116,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 117,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 118,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 119,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 120,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 121,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 122,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 123,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 124,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 125,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 126,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 127,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 128,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 129,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 130,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 131,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 132,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 133,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 134,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 136,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 137,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 138,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 139,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 140,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 141,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 142,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 143,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  }
]